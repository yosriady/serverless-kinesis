service: serverless-kinesis

provider:
  name: aws
  runtime: nodejs6.10
  region: ap-southeast-1
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.tableName}
    KINESIS_STREAM_NAME: ${self:custom.streamName}
  iamRoleStatements:
    - Effect: Allow
      Action: kinesis:PutRecord
      Resource: { Fn::GetAtt: [ KinesisStream, Arn ] }
    - Effect: Allow
      Action: dynamodb:PutItem
      Resource: { Fn::GetAtt: [ DynamoDBTable, Arn ] }
    
custom:
  tableName: ${self:service}-${self:provider.stage}-table
  streamName: ${self:service}-${self:provider.stage}-stream  
   

# The `functions` block defines what code to deploy
functions:
  send:
    handler: functions/send.handler
  receive:
    handler: functions/receive.handler
    events:
      - stream:
          type: kinesis
          arn: { Fn::GetAtt: [ KinesisStream, Arn ] }
          batchSize: 1
          startingPosition: TRIM_HORIZON
          enabled: true

resources:
  Resources:
    KinesisStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: ${self:custom.streamName}
        ShardCount: 1

    DynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: date
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: date
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
